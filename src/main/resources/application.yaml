spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/bpmn-test-17?useSSL=false&serverTimezone=Europe/Moscow&useLegacyDatetimeCode=false
    password: docker
    username: docker

camunda.bpm:
  authorization:
    enabled: true

plugin.identity.keycloak:
  keycloakIssuerUrl: http://localhost:8080/auth/realms/master
  keycloakAdminUrl: http://localhost:8080/auth/admin/realms/master
  clientId: camunda-identity-service
  clientSecret: 4NAhdhBJCX0raBJHUntrL4tVCNPFSIOZ
#  useEmailAsCamundaUserId: true
  useUsernameAsCamundaUserId: true
#  useGroupPathAsCamundaGroupId: true
  administratorGroupName: camunda-admin
  disableSSLCertificateValidation: true

# Spring Boot Security OAuth2 SSO
spring.security.oauth2:
  client:
    registration:
      keycloak:
        provider: keycloak
        client-id: camunda-identity-service
        client-secret: 4NAhdhBJCX0raBJHUntrL4tVCNPFSIOZ
        authorization-grant-type: authorization_code
        redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
        scope: openid, profile, email
    provider:
      keycloak:
        issuer-uri: http://localhost:8080/auth/realms/master
        authorization-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/auth
        user-info-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/userinfo
        token-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/token
        jwk-set-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/certs
        # set user-name-attribute one of:
        # - sub                -> default; using keycloak ID as camunda user ID
        # - email              -> useEmailAsCamundaUserId=true
        # - preferred_username -> useUsernameAsCamundaUserId=true
        user-name-attribute: preferred_username
server:
  port: 8088